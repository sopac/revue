# Generated by Django 4.0.4 on 2022-05-10 22:57

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('usage_occupancy_class', models.CharField(blank=True, choices=[('RESIDENTIAL', 'Residential'), ('COMMERCIAL', 'Commercial'), ('INDUSTRIAL', 'Industrial'), ('PUBLIC', 'Public'), ('EDUCATIONAL', 'Educational'), ('INSTITUTIONAL', 'Institutional'), ('EVACUATION_CENTER', 'Evacuation Center'), ('OUT_BUILDING', 'Out Building'), ('INFRASTRUCTURE', 'Infrastructure'), ('OTHER', 'Other')], max_length=255)),
                ('subuse', models.CharField(blank=True, choices=[('RESIDENTIAL', 'Residential'), ('COMMERCIAL', 'Commercial'), ('INDUSTRIAL', 'Industrial'), ('PUBLIC', 'Public'), ('EDUCATIONAL', 'Educational'), ('INSTITUTIONAL', 'Institutional'), ('STORAGE', 'Storage'), ('EVACUATION_CENTER', 'Evacuation Center'), ('NONE', 'None'), ('OTHER', 'Other')], max_length=255)),
                ('foundation_type', models.CharField(blank=True, choices=[('CONCRETE_SLAB', 'Concrete Slab'), ('WOODEN_CONCRETE_PILE', 'Wooden Concrete Pile'), ('STEEL_PIPE', 'Steel Pipe'), ('WOODEN_STEEL_POLE', 'Wooden Steel Pole'), ('CONCRETE_COLUMNS', 'Concrete Columns'), ('LOAD_BEARING_WALL', 'Load Bearing Wall'), ('STEEL_COLUMN', 'Steel Column'), ('UNKNOWN', 'Unknown')], max_length=255)),
                ('foundation_bracing', models.CharField(blank=True, choices=[('TIMBER_WALLS', 'Timber Walls'), ('CONCRETE_WALL', 'Concrete Wall'), ('MASONRY', 'Masonry'), ('PARTIAL_BRACING', 'Partial Bracing'), ('OTHER_(STEEL_SHEET__TIMBER_STRUTS)', 'Other (Steel Sheet  Timber Struts)'), ('NONE', 'None'), ('UNKNOWN', 'Unknown')], max_length=255)),
                ('foundation_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('min_floor_height_above_ground', models.CharField(blank=True, choices=[('<1.0M_(25CM_INCREMENT)', '<1.0M (25Cm Increment)'), ('>1.0M_(50CM_INCREMENT)', '>1.0M (50Cm Increment)')], max_length=255)),
                ('max_floor_height_above_ground', models.CharField(blank=True, choices=[('<1.0M_(25CM_INCREMENT)', '<1.0M (25Cm Increment)'), ('>1.0M_(50CM_INCREMENT)', '>1.0M (50Cm Increment)')], max_length=255)),
                ('building_structure', models.CharField(blank=True, choices=[('TIMBER_FRAME', 'Timber Frame'), ('WOODEN_POLE', 'Wooden Pole'), ('CONCRETE_COLUMNS', 'Concrete Columns'), ('STEEL_COLUMN', 'Steel Column'), ('LOAD_BEARING_WALL', 'Load Bearing Wall'), ('TILT_UP_SLAB', 'Tilt Up Slab'), ('UNKNOWN_OTHER', 'Unknown Other')], max_length=255)),
                ('wall_material', models.CharField(blank=True, choices=[('CONCRETE', 'Concrete'), ('MASONRY', 'Masonry'), ('METAL_SHEET', 'Metal Sheet'), ('FIBRE_CEMENT_SHEETS', 'Fibre Cement Sheets'), ('UNKNOWN_SHEET', 'Unknown Sheet'), ('FIBRE_CEMENT_BOARD', 'Fibre Cement Board'), ('TIMBER_BOARD', 'Timber Board'), ('UNKNOWN_BOARD', 'Unknown Board'), ('TRADITIONAL_MATERIAL', 'Traditional Material'), ('OTHER', 'Other'), ('NONE_(NO_WALLS)', 'None (No Walls)')], max_length=255)),
                ('wall_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('window_type', models.CharField(blank=True, choices=[('AWNING_WINDOWS', 'Awning Windows'), ('LOUVRES', 'Louvres'), ('BAY_RECTANGLE_WINDOWS', 'Bay Rectangle Windows'), ('BOW_(OUTWARD_PROJECTED)_WINDOWS', 'Bow (Outward Projected) Windows'), ('OTHERS', 'Others')], max_length=255)),
                ('window_protection', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('roof_shape', models.CharField(blank=True, choices=[('MONO_PITCH', 'Mono Pitch'), ('ARCH', 'Arch'), ('GABLE', 'Gable'), ('HIP', 'Hip'), ('OTHER', 'Other')], max_length=255)),
                ('roof_material', models.CharField(blank=True, choices=[('CONCRETE', 'Concrete'), ('METAL_SHEET', 'Metal Sheet'), ('FIBRE_CEMENT_SHEETS', 'Fibre Cement Sheets'), ('UNKNOWN_SHEET', 'Unknown Sheet'), ('METAL_TILES', 'Metal Tiles'), ('HEAVY_TILES', 'Heavy Tiles'), ('WOODEN_SHAKES', 'Wooden Shakes'), ('TRADITIONAL_MATERIALS', 'Traditional Materials'), ('OTHER', 'Other')], max_length=255)),
                ('roof_pitch', models.CharField(blank=True, choices=[('FLAT', 'Flat'), ('LOW', 'Low'), ('MODERATE', 'Moderate'), ('STEEP', 'Steep')], max_length=255)),
                ('roof_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('building_year', models.CharField(blank=True, choices=[('NEW_(0_5_YRS)', 'New (0 5 Yrs)'), ('MEDIUM_(5_20YRS)', 'Medium (5 20Yrs)'), ('OLD_(>20YRS)', 'Old (>20Yrs)'), ('UNKNOWN', 'Unknown')], max_length=255)),
                ('under_storey_level', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('utilities', models.CharField(blank=True, choices=[('WATER', 'Water'), ('ELECTRICITY', 'Electricity'), ('TELECOMMUNICATION', 'Telecommunication'), ('ELECTRICITY_SOLAR', 'Electricity Solar'), ('WATER_TANK', 'Water Tank')], max_length=255)),
                ('number_of_storeys', models.CharField(max_length=255)),
                ('population_vehicle', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('population_telecommunication_access', models.CharField(blank=True, choices=[('CELLPHONE', 'Cellphone'), ('MOBILE', 'Mobile'), ('VHF_RADIO', 'Vhf Radio'), ('INTERNET_CONNECTIVITY', 'Internet Connectivity'), ('RADIO_(AM_FM)', 'Radio (Am Fm)')], max_length=255)),
                ('population_disability', models.CharField(blank=True, choices=[('MENTAL_DISABILITY', 'Mental Disability'), ('SIGHT_DISABILITY', 'Sight Disability'), ('HEARING_DISABILITY', 'Hearing Disability'), ('WALKING_DISABILITY', 'Walking Disability')], max_length=255)),
                ('population_employment_status', models.CharField(max_length=255)),
                ('population_number_of_people_in_the_household', models.CharField(max_length=255)),
                ('population_number_of_males', models.CharField(max_length=255)),
                ('population_number_of_female', models.CharField(max_length=255)),
                ('population_place_of_residence', models.CharField(max_length=255)),
                ('population_language', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
            },
        ),
        migrations.CreateModel(
            name='CropsAgriculture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('crop_type', models.CharField(blank=True, choices=[('ROOT_CROP', 'Root Crop'), ('FRUIT_TREE', 'Fruit Tree')], max_length=255)),
                ('land_tenure', models.CharField(blank=True, choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('STATE_OWNED_ENTERPRISED', 'State Owned Enterprised')], max_length=255)),
                ('planting_method', models.CharField(blank=True, choices=[('MONO_CULTURE', 'Mono Culture'), ('MIXED', 'Mixed'), ('SHIFTING', 'Shifting'), ('UNKNOWN', 'Unknown')], max_length=255)),
                ('farmers_classification', models.CharField(blank=True, choices=[('COMMERCIAL', 'Commercial'), ('SEMI_COMMERCIAL', 'Semi Commercial'), ('SUBSISTENCE', 'Subsistence')], max_length=255)),
                ('number_of_farm_holdings', models.CharField(blank=True, choices=[('PARTIAL_FARM_HOLDING', 'Partial Farm Holding'), ('FULL_FARM_HOLDING', 'Full Farm Holding')], max_length=255)),
                ('fertilizer', models.CharField(blank=True, choices=[('ORGANIC', 'Organic'), ('INORGANIC', 'Inorganic'), ('UNKNOWN', 'Unknown')], max_length=255)),
                ('farming_tools', models.CharField(blank=True, choices=[('MECHANISATION_TRACTORS', 'Mechanisation Tractors'), ('GRAZING_MACHINES', 'Grazing Machines'), ('TOOLS_SPADES_FORKS', 'Tools Spades Forks')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('crop_area', models.CharField(max_length=255)),
                ('market_value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Agriculture Crops',
                'verbose_name_plural': 'Agriculture Crops',
            },
        ),
        migrations.CreateModel(
            name='InfrastructureAirPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('use', models.CharField(blank=True, choices=[('INTERNATIONAL', 'International'), ('DOMESTIC', 'Domestic'), ('PRIVATE', 'Private')], max_length=255)),
                ('navigation_light_system', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('security_fence', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No'), ('PARTIALLY_FENCED', 'Partially Fenced')], max_length=255)),
                ('surface', models.CharField(blank=True, choices=[('CONCRETE', 'Concrete'), ('ASPHALT', 'Asphalt'), ('GRASSED', 'Grassed')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('name_of_airport_airstrip', models.CharField(max_length=255)),
                ('length_of_runaway', models.CharField(max_length=255)),
                ('averaged_width_of_runway', models.CharField(max_length=255)),
                ('length_of_taxiway', models.CharField(max_length=255)),
                ('averaged_width_of_taxiway', models.CharField(max_length=255)),
                ('apron_area', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure AirPorts AirStrips',
                'verbose_name_plural': 'Infrastructure AirPorts AirStrips',
            },
        ),
        migrations.CreateModel(
            name='InfrastructureBridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('bridge_tenure', models.CharField(blank=True, choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('STATE_OWNED_ENTERPRISE', 'State Owned Enterprise')], max_length=255)),
                ('bridge_type', models.CharField(blank=True, choices=[('ARCH', 'Arch'), ('SLAB', 'Slab'), ('CABLE', 'Cable'), ('TRUSS', 'Truss'), ('CULVERT', 'Culvert'), ('CAUSEWAY', 'Causeway'), ('FORD', 'Ford')], max_length=255)),
                ('piles', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('wingwall', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('abutment_material', models.CharField(blank=True, choices=[('STEEL_TRUSS', 'Steel Truss'), ('STEEL_CONCRETE', 'Steel Concrete'), ('CONCRETE', 'Concrete'), ('NONE', 'None')], max_length=255)),
                ('superstructure_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('superstructure_materials', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('TIMBER', 'Timber'), ('CONCRETE', 'Concrete'), ('NONE', 'None')], max_length=255)),
                ('deck_material', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('TIMBER', 'Timber'), ('CONCRETE', 'Concrete'), ('OTHER', 'Other')], max_length=255)),
                ('deck_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('length', models.CharField(max_length=255)),
                ('width', models.CharField(max_length=255)),
                ('min_height_of_deck_to_water', models.CharField(max_length=255)),
                ('max_height_of_deck_to_water', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure Bridges',
                'verbose_name_plural': 'Infrastructure Bridges',
            },
        ),
        migrations.CreateModel(
            name='InfrastructureFuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('fuel_type', models.CharField(blank=True, choices=[('WOOD', 'Wood'), ('COAL', 'Coal'), ('DIESEL', 'Diesel'), ('KEROSENE', 'Kerosene'), ('GASOLINE', 'Gasoline'), ('PETROL', 'Petrol'), ('ETHANOL', 'Ethanol'), ('PROPANE', 'Propane'), ('METHANE', 'Methane'), ('LPG', 'Lpg')], max_length=255)),
                ('fuel_asset_type', models.CharField(blank=True, choices=[('SERVICE_STATION', 'Service Station'), ('STORAGE_FACILITY', 'Storage Facility')], max_length=255)),
                ('tank_material', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('WOODEN', 'Wooden'), ('METAL_IORN', 'Metal Iorn'), ('CEMENT', 'Cement')], max_length=255)),
                ('storage_type', models.CharField(blank=True, choices=[('FACILITY', 'Facility'), ('BUILDING_YARD', 'Building Yard'), ('UNDERGROUND_TANKS', 'Underground Tanks'), ('SILOS', 'Silos')], max_length=255)),
                ('tenure', models.CharField(blank=True, choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public'), ('STATE_OWNED_ENTERPRISE', 'State Owned Enterprise')], max_length=255)),
                ('condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('storage_capacity', models.CharField(max_length=255)),
                ('fuel_service_provider', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure Fuel',
                'verbose_name_plural': 'Infrastructure Fuel',
            },
        ),
        migrations.CreateModel(
            name='InfrastructurePort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('asset_type', models.CharField(blank=True, choices=[('WHARF', 'Wharf'), ('JETTIES', 'Jetties'), ('PIERS', 'Piers'), ('MARINA', 'Marina'), ('MILITARY', 'Military')], max_length=255)),
                ('port_use', models.CharField(blank=True, choices=[('INTERNATIONAL', 'International'), ('DOMESTIC', 'Domestic'), ('PRIVATE', 'Private')], max_length=255)),
                ('types_of_vessel', models.CharField(blank=True, choices=[('INTERNATIONAL_CARGO_CONTAINERS', 'International Cargo Containers'), ('INTERNATIONAL_TANKERS', 'International Tankers'), ('INTERNATIONAL_FERRIES', 'International Ferries'), ('DOMESTIC_FERRIES_AND_PASSENGER', 'Domestic Ferries And Passenger'), ('DOMESTIC_OUTBOARDS', 'Domestic Outboards'), ('PRIVATE_YACHTS', 'Private Yachts'), ('OTHER', 'Other')], max_length=255)),
                ('condition_of_port', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('tenure', models.CharField(blank=True, choices=[('GOVERNMENT_OWNED', 'Government Owned'), ('COMMERCIAL', 'Commercial'), ('PRIVATE', 'Private'), ('COMMUNITY', 'Community'), ('STATE_OWNED_ENTERPRISE', 'State Owned Enterprise')], max_length=255)),
                ('construction_material', models.CharField(blank=True, choices=[('STEEL_REINFORCEMENT', 'Steel Reinforcement'), ('CONCRETE', 'Concrete'), ('STEEL', 'Steel'), ('TIMBER', 'Timber'), ('OTHER', 'Other')], max_length=255)),
                ('decking', models.CharField(blank=True, choices=[('CONCRETE', 'Concrete'), ('STEEL', 'Steel'), ('TIMBER', 'Timber'), ('ASPHALT', 'Asphalt')], max_length=255)),
                ('seawall_type', models.CharField(blank=True, choices=[('BREAK_WATER', 'Break Water'), ('GROYNE', 'Groyne'), ('ETC', 'Etc')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('number_of_tug_boats', models.CharField(max_length=255)),
                ('length_of_birth', models.CharField(max_length=255)),
                ('width_of_apron', models.CharField(max_length=255)),
                ('port_vessel_capacity', models.CharField(max_length=255)),
                ('port_storage_capacity', models.CharField(max_length=255)),
                ('seawall_length', models.CharField(max_length=255)),
                ('replacement_cost', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure Ports',
                'verbose_name_plural': 'Infrastructure Ports',
            },
        ),
        migrations.CreateModel(
            name='InfrastructureRoads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('road_class', models.CharField(blank=True, choices=[('MAIN_ROAD', 'Main Road'), ('SECONDARY_ROAD_STREET', 'Secondary Road Street'), ('HIGHWAY', 'Highway')], max_length=255)),
                ('surface_seal', models.CharField(blank=True, choices=[('GRAVEL', 'Gravel'), ('EARTH', 'Earth'), ('SEAL', 'Seal'), ('ASPHALT', 'Asphalt'), ('CHIPPED_SEAL', 'Chipped Seal'), ('CONCRETE', 'Concrete')], max_length=255)),
                ('condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('location_of_road', models.CharField(blank=True, choices=[('URBAN', 'Urban'), ('RURAL', 'Rural')], max_length=255)),
                ('evacuation_road', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('footpath_presence', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('traffic_volume', models.CharField(blank=True, choices=[('LIGHT_(<100_VEHICLES_PER_DAY)', 'Light (<100 Vehicles Per Day)'), ('MEDIUM_(100_1000_VEH_DAY)', 'Medium (100 1000 Veh Day)'), ('HIGH_(>1000_VEH_DAY)', 'High (>1000 Veh Day)')], max_length=255)),
                ('terrain', models.CharField(blank=True, choices=[('FLAT', 'Flat'), ('ROLLING(SMALL_HILLS)', 'Rolling(Small Hills)'), ('STEEP', 'Steep'), ('MOUNTAINOUS', 'Mountainous')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('number_of_lanes', models.CharField(max_length=255)),
                ('year_constructed', models.CharField(max_length=255)),
                ('length', models.CharField(max_length=255)),
                ('width', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure Roads',
                'verbose_name_plural': 'Infrastructure Roads',
            },
        ),
        migrations.CreateModel(
            name='InfrastructureTelecommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('asset_condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('asset_type', models.CharField(blank=True, choices=[('TOWER', 'Tower'), ('POLES', 'Poles'), ('SATELLITE_DISH', 'Satellite Dish'), ('ANTENNA', 'Antenna'), ('MAST', 'Mast')], max_length=255)),
                ('tower_height', models.CharField(blank=True, choices=[('5M_<', '5M <'), ('5M_>_X_<_20M', '5M > X < 20M'), ('20M_>', '20M >')], max_length=255)),
                ('tower_construction_material', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('TIMBER', 'Timber'), ('CONCRETE', 'Concrete'), ('FIBER_GLASS', 'Fiber Glass')], max_length=255)),
                ('tower_use', models.CharField(blank=True, choices=[('TELECOMMUNICATIONS', 'Telecommunications'), ('MOBILE_NETWORKS', 'Mobile Networks'), ('VHF_RADIO', 'Vhf Radio')], max_length=255)),
                ('subtype', models.CharField(blank=True, choices=[('LATTICE', 'Lattice'), ('TABULAR', 'Tabular')], max_length=255)),
                ('satellite_dishes_attached', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('sirens_attached', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('antenna_attached', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('subuse', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Infrastructure Telecommunications',
                'verbose_name_plural': 'Infrastructure Telecommunications',
            },
        ),
        migrations.CreateModel(
            name='Livestock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('land_tenure', models.CharField(blank=True, choices=[('NON_TRADITIONAL', 'Non Traditional'), ('PRIVATE', 'Private'), ('COMMERCIAL', 'Commercial'), ('STATEOWNED_ENTERPRISE', 'Stateowned Enterprise')], max_length=255)),
                ('method_of_farming', models.CharField(blank=True, choices=[('FREE_RANGE', 'Free Range'), ('FENCED', 'Fenced'), ('CONFINEMENT', 'Confinement')], max_length=255)),
                ('farmer_classification', models.CharField(blank=True, choices=[('COMMERCIAL', 'Commercial'), ('SEMI_COMMERCIAL', 'Semi Commercial'), ('SUBSISTENCE', 'Subsistence')], max_length=255)),
                ('fence_type', models.CharField(blank=True, choices=[('WOODEN', 'Wooden'), ('STEEL__WIRES', 'Steel  Wires'), ('STEEL_FENCE', 'Steel Fence'), ('CONCRETE', 'Concrete'), ('WOODEN_AND_STEEL_WIRES', 'Wooden And Steel Wires')], max_length=255)),
                ('sheds', models.CharField(blank=True, choices=[('MILKING_SHED', 'Milking Shed'), ('PIGGERY', 'Piggery'), ('BROILER___CHICKEN_PENS', 'Broiler   Chicken Pens'), ('OTHER_SHEDS', 'Other Sheds')], max_length=255)),
                ('tools', models.CharField(blank=True, choices=[('MECHANISATION', 'Mechanisation'), ('MANUAL_MARCHINES_ETC.', 'Manual Marchines Etc.')], max_length=255)),
                ('collect_gps_location', models.CharField(max_length=255)),
                ('number_of_livestocks', models.CharField(max_length=255)),
                ('livestock_growth_stage', models.CharField(max_length=255)),
                ('livestock_feed', models.CharField(max_length=255)),
                ('fence_length', models.CharField(max_length=255)),
                ('farm_area_size', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Agriculture Livestock',
                'verbose_name_plural': 'Agriculture Stock',
            },
        ),
        migrations.CreateModel(
            name='UtilityElectricity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('asset_type', models.CharField(blank=True, choices=[('POWER_PLANT', 'Power Plant'), ('TRANSFORMER', 'Transformer'), ('TOWER', 'Tower'), ('SUB_STATION', 'Sub Station'), ('SOLAR_FARM', 'Solar Farm')], max_length=255)),
                ('source_type', models.CharField(blank=True, choices=[('RENEWABLE_HYDRO_SOLAR_WIND_BIOMASS_GEOTHERMAL_OTEC', 'Renewable Hydro Solar Wind Biomass Geothermal Otec'), ('NON_RENEWABLE_GAS_FUEL_COAL_WOOD', 'Non Renewable Gas Fuel Coal Wood')], max_length=255)),
                ('asset_material', models.CharField(blank=True, choices=[('STEEL', 'Steel'), ('CONCRETE', 'Concrete'), ('STEEL_AND_CONCRETE', 'Steel And Concrete'), ('OTHER', 'Other')], max_length=255)),
                ('transformer_type', models.CharField(blank=True, choices=[('PAD___MOUNTED', 'Pad   Mounted'), ('POLE___MOUNTED', 'Pole   Mounted')], max_length=255)),
                ('ownership', models.CharField(blank=True, choices=[('PRIVATE', 'Private'), ('GOVERNMENT', 'Government'), ('STATE_OWNED_ENTERPRISE', 'State Owned Enterprise'), ('IPP_GENERATION', 'Ipp Generation')], max_length=255)),
            ],
            options={
                'verbose_name': 'Utility Electricity',
                'verbose_name_plural': 'Utility Electricity',
            },
        ),
        migrations.CreateModel(
            name='UtilityWater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validated', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False, editable=False)),
                ('country', models.CharField(blank=True, choices=[('FIJI', 'Fiji'), ('TONGA', 'Tonga'), ('VANUATU', 'Vanuatu'), ('COOK_ISLANDS', 'Cook Islands'), ('SAMOA', 'Samoa')], max_length=255)),
                ('location_point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location_line', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('location_polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('photo_1', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_2', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_3', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('photo_4', models.ImageField(blank=True, max_length=6544444, null=True, upload_to='.')),
                ('asset_type', models.CharField(blank=True, choices=[('WATER_TANK', 'Water Tank'), ('RESEVOIR', 'Resevoir'), ('DESALINATION_PLANT', 'Desalination Plant'), ('PUMPING_STATION', 'Pumping Station'), ('TREATMENT_PLANT', 'Treatment Plant'), ('DAMS', 'Dams'), ('WELL', 'Well')], max_length=255)),
                ('source_type', models.CharField(blank=True, choices=[('SURFACE_WATER', 'Surface Water'), ('GROUND_WATER', 'Ground Water'), ('SEA_WATER', 'Sea Water'), ('WASTE_WATER', 'Waste Water'), ('RAIN_WATER', 'Rain Water')], max_length=255)),
                ('condition', models.CharField(blank=True, choices=[('5_EXCELLENT_CONDITION', '5 Excellent Condition'), ('4_GOOD_CONDITION', '4 Good Condition'), ('3_FAIR_CONDITION', '3 Fair Condition'), ('2_POOR_CONDITION', '2 Poor Condition'), ('1_VERY_POOR_CONDITION', '1 Very Poor Condition')], max_length=255)),
                ('water_network', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('asset_ownership', models.CharField(blank=True, choices=[('PRIVATE', 'Private'), ('GOVERNMENT', 'Government'), ('STATE_OWNED_ENTERPRISE', 'State Owned Enterprise'), ('COMMUNITY_OWNED', 'Community Owned')], max_length=255)),
                ('asset_material', models.CharField(blank=True, choices=[('PVC', 'Pvc'), ('CONCRETE', 'Concrete'), ('STEEL', 'Steel'), ('FIBRE_CEMENT', 'Fibre Cement'), ('EARTH_NATURAL', 'Earth Natural'), ('OTHER', 'Other')], max_length=255)),
                ('covered', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
                ('treated', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], max_length=255)),
            ],
            options={
                'verbose_name': 'Utility Water',
                'verbose_name_plural': 'Utility Water',
            },
        ),
    ]
